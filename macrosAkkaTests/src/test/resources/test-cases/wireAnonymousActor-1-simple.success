import akka.actor.{Actor, ActorSystem}
import com.softwaremill.macwire.akkasupport._

/**
  * In this example I am constructing simple actor with 1 dependency.
  */

trait A

class SomeActor(a: A) extends Actor {
  override def receive: Receive = {
    case m => //println(m)
  }
}

val a = new A {}

val system = ActorSystem("wireAnonymousActor-1-simple")
AfterAllTerminate(system)

val someActor = wireAnonymousActor[SomeActor]

someActor ! "Hey someActor"
