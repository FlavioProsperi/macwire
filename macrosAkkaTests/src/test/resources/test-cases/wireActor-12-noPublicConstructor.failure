import akka.actor.{Actor, ActorSystem, Props}
import com.softwaremill.macwire.akkasupport._

/**
  * In this example SomeActor has no public constructors.
  * Thus wireActor will not find suitable one and fail compilation.
  */

trait A
trait B
trait C
trait D

class SomeActor private (a: A) extends Actor {

  private def this(b: B) = {
    this(new A{})
    throw new UnsupportedOperationException()
  }

  private def this(c: C) = this(new A{})

  @javax.inject.Inject
  private def this(d: D) = this(new A{})

  override def receive: Receive = {
    case m => //println(m)
  }
}

lazy val a: A = throw new UnsupportedOperationException()
lazy val b: A = throw new UnsupportedOperationException()
val c = new C {}
val d = new D {}

val system = ActorSystem("wireActor-12-noPublicConstructor")

val someActor = wireActor[SomeActor]("Bob")

someActor ! "Hey someActor"

system.terminate()